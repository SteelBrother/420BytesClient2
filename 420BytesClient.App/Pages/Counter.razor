@page "/counter"
@inject IIndiceUsuarios_ViewModel IIndiceUsuarios_ViewModel
@* @using Microsoft.AspNetCore.SignalR.Client *@
@using _420BytesClient.App.ViewModels.Usuarios.Interfaces;
@using _420BytesClient.DT.Usuario;

<div class="container">
    <div class="row">
        <div class="col-sm-12">
            <h1>Usuarios</h1>

            <div>
    @*             <EditForm Model="UsuarioLlenar" OnValidSubmit="RegistrarUsuario">

                    <p>Registrar usuario</p>
                    <input placeholder="Cedula" type="text" @bind="@UsuarioLlenar.Cedula" />
                    <input placeholder="Nombre" type="text" @bind="@UsuarioLlenar.Nombre" />
                    <input placeholder="Email" type="text" @bind="@UsuarioLlenar.Email" />
                    <input placeholder="Password" type="text" @bind="@UsuarioLlenar.Password" />
                    <input placeholder="Ciudad" type="text" @bind="@UsuarioLlenar.Ciudad" />
                    <input placeholder="Pais" type="text" @bind="@UsuarioLlenar.Pais" />
                    <input placeholder="NickName" type="text" @bind="@UsuarioLlenar.NickName" />
                    <input placeholder="FechaNaciemiento" type="text" @bind="@UsuarioLlenar.BirthDate" />
                    <input type="text" @bind="@UsuarioLlenar.Cedula" />
                    <input type="text" @bind="@UsuarioLlenar.Nombre" />
                    <input type="text" @bind="@UsuarioLlenar.Email" />
                    <input type="text" @bind="@UsuarioLlenar.Password" />
                    <input type="text" @bind="@UsuarioLlenar.Ciudad" />
                    <input type="text" @bind="@UsuarioLlenar.Pais" />
                    <input type="text" @bind="@UsuarioLlenar.NickName" />
                    <input type="text" @bind="@UsuarioLlenar.FechaNacimiento" />

                    <input value="Guardar" Type="submit">

                </EditForm>
 *@

            </div>

        </div>
    </div>
    @if (IIndiceUsuarios_ViewModel.Usuarios != null && IIndiceUsuarios_ViewModel.Usuarios.Count > 0)
    {
        <div class="row">
            <div class="col-sm-12">
                <div>
                    <table class="default" id="TablaUsuarios">

                        <tr>
                            <td>Cedula</td>
                            <td>Nombre</td>
                            <td></td>
                            <td></td>
                        </tr>
                        @foreach (var item in IIndiceUsuarios_ViewModel.Usuarios)
                        {
                            @* <tr>
                                <td><input @bind-value="@item.Cedula"> </td>
                                <td><input @bind-value="@item.Nombre"> </td>
                                <td><button @onclick="() => ActualizarUsuario2(item)">Actualizar</button> </td>
                                <td><button @onclick="() => BorrarUsuario(item.Cedula)">Borrar</button> </td>
                            </tr> *@
                        }
                    </table>
                </div>
            </div>
        </div>
    }

</div>
@code {
    private string CedulaIngresadaF { get; set; }
    private string NombreIngresadoF { get; set; }
    List<Usuario> Usuarios = new List<Usuario>();
    Usuario UsuarioLlenar = new Usuario();


    protected async override Task OnInitializedAsync()
    {
        await IIndiceUsuarios_ViewModel.InitializeAsync();
    }

    public async Task RegistrarUsuario()
    {
        await IIndiceUsuarios_ViewModel.RegitrarUsuario(UsuarioLlenar);
    }
    public async Task ActualizarUsuario2(Usuario Usuario)
    {
        await IIndiceUsuarios_ViewModel.ActualizarUsuario(Usuario);
    }

    public async Task BorrarUsuario(int Cedula)
    {
        await IIndiceUsuarios_ViewModel.BorrarUsuario(Cedula);
    }
}